PS F:\vcpkg> ./vcpkg install detours:x86-windows
Computing installation plan...
The following packages will be built and installed:
    detours:x86-windows@4.0.1#8
Detecting compiler hash for triplet x86-windows...
Compiler found: C:/Program Files/Microsoft Visual Studio/2022/Professional/VC/Tools/MSVC/14.42.34433/bin/Hostx64/x86/cl.exe
Installing 1/1 detours:x86-windows@4.0.1#8...
Building detours:x86-windows@4.0.1#8...
-- Note: detours only supports static library linkage. Building static library.
-- Using cached microsoft-Detours-v4.0.1.tar.gz.
-- Cleaning sources at F:/vcpkg/buildtrees/detours/src/v4.0.1-2f7d798f9a.clean. Use --editable to skip cleaning for the packages you specify.
-- Extracting source F:/vcpkg/downloads/microsoft-Detours-v4.0.1.tar.gz
-- Applying patch find-jmp-bounds-arm64.patch
-- Using source at F:/vcpkg/buildtrees/detours/src/v4.0.1-2f7d798f9a.clean
-- Found external ninja('1.12.1').
-- Getting CMake variables for x86-windows
-- Building x86-windows-dbg
-- Building x86-windows-rel
-- Up-to-date: F:/vcpkg/packages/detours_x86-windows/lib
-- Installing: F:/vcpkg/packages/detours_x86-windows/lib/detours.lib
-- Up-to-date: F:/vcpkg/packages/detours_x86-windows/debug/lib
-- Installing: F:/vcpkg/packages/detours_x86-windows/debug/lib/detours.lib
-- Installing: F:/vcpkg/packages/detours_x86-windows/include/detours
-- Installing: F:/vcpkg/packages/detours_x86-windows/include/detours/detours.h
-- Installing: F:/vcpkg/packages/detours_x86-windows/include/detours/detver.h
-- Installing: F:/vcpkg/packages/detours_x86-windows/share/detours/copyright
-- Installing: F:/vcpkg/packages/detours_x86-windows/share/detours/usage
-- Performing post-build validation
Stored binaries in 1 destinations in 227 ms.
Elapsed time to handle detours:x86-windows: 8.9 s
detours:x86-windows package ABI: 950d5239f155c6c76f7dbbe06bb6b6ffdedfb2536d4f5380e49a1a8dc10b370b
Total install time: 8.9 s
detours can be used from CMake via:

    find_path(DETOURS_INCLUDE_DIRS "detours/detours.h")
    find_library(DETOURS_LIBRARY detours REQUIRED)

    target_include_directories(main PRIVATE ${DETOURS_INCLUDE_DIRS})
    target_link_libraries(main PRIVATE ${DETOURS_LIBRARY})